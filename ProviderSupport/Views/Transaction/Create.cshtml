@model ProviderSupport.Models.Transaction

@{
    ViewBag.Title = "Add";
}

<h2>Add Transaction</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.ProviderID, "ProviderID", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-sm-6">
                @Html.DropDownList("ProviderID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProviderID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-sm-6">
                @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.DateWorked, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DateWorked, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateWorked, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.ServiceTypeID, "ServiceTypeID", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-8">
                @Html.DropDownList("ServiceTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div>------------------- Using RadioButtonFor ------------------</div>
    @*<h1>@ViewBag.ServiceTypeList</h1>*@
    
    @foreach (var item in ViewBag.ServiceTypeList)
    {
        <p>@item.Desc</p>           
    } 

    <h4>Hours Worked</h4>
    <div class="input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.TimeIn, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group editor">
            @Html.LabelFor(model => model.TimeOut, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeOut, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor editor">
            @Html.LabelFor(model => model.ServiceDesc, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ServiceDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceDesc, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <h4>Progress Notes</h4>
        <div class="form-group editor">
            @*@Html.LabelFor(model => model.ProgressNote, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgressNote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgressNote, "", new { @class = "text-danger" })
            </div>
        </div>

    <h4>Mileage</h4>
    <div class="input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.OdometerStart, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OdometerStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OdometerStart, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.OdometerEnd, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OdometerEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OdometerEnd, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.TravelPurpose, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TravelPurpose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TravelPurpose, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <h4>Expenses</h4>
    <div class="container-fluid input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.ExpenseVendor, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ExpenseVendor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpenseVendor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.ExpensePurpose, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ExpensePurpose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpensePurpose, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.ExpenseAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ExpenseAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpenseAmount, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <h4>Employment</h4>
    <div class="input-line">
        <div class="form-group editor">
            @Html.LabelFor(model => model.ServiceTypeEmplID, "ServiceTypeEmplID", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceTypeEmplID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTypeEmplID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group editor">
            @Html.LabelFor(model => model.EmploymentDirSuppHrs, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmploymentDirSuppHrs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmploymentDirSuppHrs, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
